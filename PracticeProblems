import java.util.Arrays;
import java.io.*;

class Main{
    public static void main(String[] args){
        int [] arr1 = {18,90,76,57,39};
      int k = 3;

    rotate(arr1,k);
    printArray(arr1);
      int target = 8;

      int ans = ceiling(arr,target);
      System.out.print(ans);
      int asn = peakIndexInMountainArray(arr);
      System.out.print(asn);
        reverse(arr);
        System.out.println(Arrays.toString(arr));

    }

  static void reverse(int[] arr , int start,int end){
    

    while(start < end){
      int temp = arr[start];
      arr[start] = arr[end];
      arr[end] = temp;
    }
  }

  
  static void rotate(int[] arr, int k){

    k = k % arr.length;

    reverse(arr, 0 ,arr.length-k-1);
    reverse(arr, arr.length-k , arr.length-1);
    reverse(arr, 0 , arr.length-1);
    
    
  }

  static void printArray(int arr[])
    {
        for (int i = 0; i < arr.length; i++)
            System.out.print(arr[i] + " ");
    }


  static int peakIndexInMountainArray(int[] arr) {
    int low = 0;
    int high = arr.length - 1;
    while (low < high) {
      int mid = low + (high - low) / 2;
      if (arr[mid] < arr[mid + 1]) {
        low = mid + 1;
      }
      else {
        high = mid;
      }
    }
    return low;
  }

  static int ceiling(int[] arr ,int target){

    int start = 0;
    int end = arr.length -1 ;

    while(start < end){

      int mid = start + (end -start)/2;

      if(target > arr[mid]){
        start = mid+1;
      }
      else if (target < arr[mid]){
        end = mid -1 ;
      }
      else{
        return mid;
      }
    }

    return arr[end];
    
    
  }

    static void reverse(int[] arr){
        int start = 0;
        int end = arr.length -1 ;

        while(start < end ){
            swap(arr,start,end);
            start++;
            end--;
        }
    }

    static void swap(int[] arr, int one , int two){
        int temp = arr[one];
        arr[one] =arr[two];
        arr[two] = temp;
    }
}
