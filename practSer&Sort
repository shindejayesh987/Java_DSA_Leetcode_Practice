import java.util.Arrays;

public class pract {
    public static void main(String[] args) {
        int [] arr = {21,61,94,68,3,15,7};
        int target = 6;
        int ans = Binary(arr,target);
        System.out.println(Arrays.toString(arr));
        reverse(arr);
        System.out.println(Arrays.toString(arr));

        cyclesort(arr);
        System.out.println(Arrays.toString(arr));




    }

    static int Binary(int[] arr, int target){
        int s = 0;
        int e = arr.length -1;
        while(s < e){
            int m = s + (e-s)/2;

            if (target > arr[m]){
                s = m + 1;
            }
            if (target < arr[m]){
                e = m-1;
            }
            else {
                return m;
            }
        }

        return -1;
    }

    static int Linear(int[] arr,int target){

        if (arr.length == 0){
            System.out.println("Invalid !!!");
        }

        for (int i = 0; i < arr.length; i++) {
            int ele = arr[i];
            if (ele == target){
                return i;
            }
        }
        return -1;

    }

    static void reverse(int[] arr){

        int start = 0;
        int end = arr.length-1;

        while (start < end){
            swap(arr,start,end);
            start++;
            end--;
        }

    }

    static void swap(int[] arr , int start , int end){
        int temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;
    }

    static void BubbleSort(int[] arr){
        for (int i = 0; i < arr.length; i++) {
            for (int j = 1; j < arr.length-i ; j++) {
                if (arr[j] < arr[j-1]){
                    int temp = arr[j-1];
                    arr[j-1] = arr[j];
                    arr[j] = temp;
                }
            }
        }
    }

    static void SelectionSort(int[] arr){
        for (int i = 0; i < arr.length;i++){
            int last = arr.length-i-1;
            int maxindex = getmaxindex(arr,0, last);
            swap(arr,maxindex,last);
        }

    }

    static int getmaxindex(int[] arr,int start , int end) {
        int max = start;

        for (int i = start; i < end; i++) {
            if (arr[i] > arr[max]) {
                max = i;
            }
        }
        return max;
    }

    static void InsertionSort(int[] arr){
        for (int i = 0; i < arr.length-1; i++) {
            for (int j = i+1; j >0 ; j--) {
                if (arr[j]  < arr[j-1]){
                    swap(arr,j,j-1);
                }else {
                    break;
                }

            }

        }
    }

    static void cyclesort(int[]arr){
        int i =0;
        while(i< arr.length){
            int correct = arr[i] - 1;
            if(arr[i] != arr[correct]){
                swap(arr,i,correct);
            }
            else{
                i++;
            }
        }
    }


}
